# ============================================================================
# üß™ CONFIGURA√á√ÉO DE TESTES - MICROSERVI√áO BATE-PAPO
# ============================================================================
#
# Configura√ß√£o otimizada para execu√ß√£o de testes:
# - Banco H2 em mem√≥ria
# - JWT mockeado
# - Redis embarcado
# - WebSocket desabilitado
# - SSE simplificado
# - Logs minimizados
#
# @author Sistema de Migra√ß√£o R2DBC
# @version 1.0
# @since 2024
# ============================================================================

# ========================================
# üè∑Ô∏è CONFIGURA√á√ïES GERAIS
# ========================================
spring:
  application:
    name: batepapo-microservice-test
  main:
    banner-mode: off
    
  # ========================================
  # üóÑÔ∏è BANCO DE DADOS (H2 EM MEM√ìRIA)
  # ========================================
  r2dbc:
    url: r2dbc:h2:mem:///testdb?options=DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: ""
    
  # Flyway desabilitado para testes (schema criado via @Sql)
  flyway:
    enabled: false
    
  # Inicializa√ß√£o SQL habilitada para testes
  sql:
    init:
      mode: always
      schema-locations: classpath:schema.sql

  # ========================================
  # üîê SEGURAN√áA JWT (MOCK)
  # ========================================
  security:
    oauth2:
      resourceserver:
        jwt:
          # JWT desabilitado para testes - usar @WithMockUser
          enabled: false

  # ========================================
  # üöÄ REDIS (MOCK/EMBARCADO)
  # ========================================
  data:
    redis:
      # Redis embarcado para testes
      host: localhost
      port: 6371
      timeout: 500ms

# ========================================
# üåê SERVIDOR (PORTA ALEAT√ìRIA)
# ========================================
server:
  port: 0

# ========================================
# üö¶ FEATURE FLAGS (TESTES)
# ========================================
feature:
  batepapo-ms: true
  websocket: false  # WebSocket desabilitado para testes
  sse: true
  message-persistence: true
  redis-streams: false  # Redis streams desabilitado para testes
  rate-limiting: false  # Rate limiting desabilitado para testes

# ========================================
# üí¨ CONFIGURA√á√ïES DE CHAT (TESTE)
# ========================================
chat:
  max-message-length: 500
  max-rooms-per-user: 10
  message-retention-days: 1  # Reten√ß√£o m√≠nima para testes
  online-timeout-minutes: 1  # Timeout reduzido para testes
  heartbeat-interval-seconds: 5  # Heartbeat mais frequente
  max-connections-per-user: 5

# ========================================
# üìù LOGGING (OTIMIZADO PARA TESTES R2DBC)
# ========================================
logging:
  level:
    root: WARN
    br.tec.facilitaservicos.batepapo: DEBUG
    # R2DBC e SQL logs habilitados para debug de testes
    org.springframework.r2dbc: DEBUG
    io.r2dbc.h2: DEBUG
    io.r2dbc.spi: DEBUG
    org.springframework.data.r2dbc: DEBUG
    # Outros logs minimizados
    org.springframework.security: ERROR
    org.springframework.web: ERROR
    reactor.netty: WARN
    org.springframework.boot.autoconfigure: WARN
    org.springframework.test: INFO
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(%-5level) %clr([%thread]){faint} %clr(%logger{36}){cyan} - %msg%n"

# ========================================
# üìä ACTUATOR (SIMPLIFICADO)
# ========================================
management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

# ========================================
# üõ°Ô∏è RESILIENCE4J (DESABILITADO)
# ========================================
resilience4j:
  circuitbreaker:
    instances:
      database:
        registerHealthIndicator: false
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
      redis:
        registerHealthIndicator: false
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        
  ratelimiter:
    instances:
      chat-service:
        registerHealthIndicator: false
        limitForPeriod: 1000
        limitRefreshPeriod: 1s
        timeoutDuration: 0s

# ========================================
# üåê CORS (PERMISSIVO PARA TESTES)
# ========================================
cors:
  allowed-origins: "*"
  allowed-methods: "*"
  allowed-headers: "*"
  allow-credentials: false

# ========================================
# üåê CONFIGURA√á√ïES DE SERVI√áOS EXTERNOS (MOCK)
# ========================================
services:
  auth:
    url: http://localhost:8081
    endpoints:
      validate: /auth/validate
      users: /rest/v1/users
    timeout: 1s
    
# ========================================
# üß™ CONFIGURA√á√ïES ESPEC√çFICAS DE TESTE
# ========================================
test:
  # Configura√ß√µes espec√≠ficas para testes
  mock-services:
    redis: true
    websocket: true
    sse: true
    auth: true  # Mock do servi√ßo de autentica√ß√£o
  
  # Dados de teste
  usuarios-teste:
    - user123
    - user456
    - moderator123
  
  salas-teste:
    - geral
    - tecnologia
    - jogos
  
  # Timeouts reduzidos
  timeouts:
    web: 1s
    database: 500ms
    redis: 200ms
    sse: 30s