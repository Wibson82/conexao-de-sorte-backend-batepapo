package br.tec.facilitaservicos.batepapo.dominio.enums;

/**
 * Enum que representa os tipos de sala de chat
 * 
 * @author Sistema de Migra√ß√£o R2DBC
 * @version 1.0
 * @since 2024
 */
public enum TipoSala {
    
    /**
     * Sala p√∫blica - todos podem entrar
     */
    PUBLICA("P√∫blica"),
    
    /**
     * Sala privada - apenas usu√°rios convidados
     */
    PRIVADA("Privada"),
    
    /**
     * Sala para discuss√£o de resultados
     */
    RESULTADOS("Resultados"),
    
    /**
     * Sala para dicas e estrat√©gias
     */
    DICAS("Dicas"),
    
    /**
     * Sala para suporte ao usu√°rio
     */
    SUPORTE("Suporte"),
    
    /**
     * Sala geral para conversa livre
     */
    GERAL("Geral"),
    
    /**
     * Sala tempor√°ria/evento especial
     */
    TEMPORARIA("Tempor√°ria"),
    
    /**
     * Sala para moderadores apenas
     */
    MODERADORES("Moderadores");

    private final String descricao;

    TipoSala(String descricao) {
        this.descricao = descricao;
    }

    public String getDescricao() {
        return descricao;
    }

    /**
     * Verifica se qualquer usu√°rio pode entrar na sala
     */
    public boolean isAcessoLivre() {
        return this == PUBLICA || this == RESULTADOS || this == DICAS || this == GERAL;
    }

    /**
     * Verifica se a sala requer permiss√µes especiais
     */
    public boolean requerPermissaoEspecial() {
        return this == PRIVADA || this == SUPORTE || this == MODERADORES;
    }

    /**
     * Verifica se √© sala do sistema (n√£o criada por usu√°rios)
     */
    public boolean isSalaSistema() {
        return this == RESULTADOS || this == DICAS || this == SUPORTE || 
               this == GERAL || this == MODERADORES;
    }

    /**
     * Verifica se usu√°rios podem criar salas deste tipo
     */
    public boolean podeSerCriadaPorUsuario() {
        return this == PUBLICA || this == PRIVADA || this == TEMPORARIA;
    }

    /**
     * Verifica se a sala tem modera√ß√£o autom√°tica
     */
    public boolean temModeracaoAutomatica() {
        return this == SUPORTE || this == MODERADORES;
    }

    /**
     * Obt√©m o n√∫mero m√°ximo padr√£o de usu√°rios para este tipo de sala
     */
    public int getMaxUsuariosPadrao() {
        return switch (this) {
            case PUBLICA, GERAL, RESULTADOS -> 200;
            case DICAS -> 100;
            case SUPORTE -> 50;
            case PRIVADA, TEMPORARIA -> 20;
            case MODERADORES -> 10;
        };
    }

    /**
     * Obt√©m a cor/tema para exibi√ß√£o da sala
     */
    public String getCor() {
        return switch (this) {
            case PUBLICA, GERAL -> "primary";
            case RESULTADOS -> "success";
            case DICAS -> "info";
            case SUPORTE -> "warning";
            case PRIVADA -> "secondary";
            case TEMPORARIA -> "light";
            case MODERADORES -> "danger";
        };
    }

    /**
     * Obt√©m o √≠cone para o tipo de sala
     */
    public String getIcone() {
        return switch (this) {
            case PUBLICA -> "üåç";
            case PRIVADA -> "üîí";
            case RESULTADOS -> "üé∞";
            case DICAS -> "üí°";
            case SUPORTE -> "üÜò";
            case GERAL -> "üí¨";
            case TEMPORARIA -> "‚è∞";
            case MODERADORES -> "üëÆ";
        };
    }

    /**
     * Obt√©m a descri√ß√£o estendida da sala
     */
    public String getDescricaoEstendida() {
        return switch (this) {
            case PUBLICA -> "Sala aberta para todos os usu√°rios";
            case PRIVADA -> "Sala restrita para usu√°rios convidados";
            case RESULTADOS -> "Discuss√£o sobre resultados da loteria";
            case DICAS -> "Compartilhamento de dicas e estrat√©gias";
            case SUPORTE -> "Atendimento e suporte aos usu√°rios";
            case GERAL -> "Conversa livre sobre qualquer assunto";
            case TEMPORARIA -> "Sala criada para evento espec√≠fico";
            case MODERADORES -> "Sala exclusiva para moderadores";
        };
    }

    /**
     * Obt√©m as salas padr√£o do sistema
     */
    public static TipoSala[] getSalasPadrao() {
        return new TipoSala[]{GERAL, RESULTADOS, DICAS, SUPORTE};
    }

    /**
     * Converte string para enum
     */
    public static TipoSala fromString(String tipo) {
        if (tipo == null || tipo.trim().isEmpty()) {
            return PUBLICA;
        }
        
        try {
            return TipoSala.valueOf(tipo.trim().toUpperCase());
        } catch (IllegalArgumentException e) {
            return PUBLICA;
        }
    }

    @Override
    public String toString() {
        return descricao;
    }
}