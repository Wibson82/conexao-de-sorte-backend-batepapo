server:
  port: ${SERVER_PORT:8079}
  shutdown: graceful
  ssl:
    enabled: ${conexao-de-sorte-ssl-enabled:false}
    key-store: ${conexao-de-sorte-ssl-keystore-path:}
    key-store-password: ${conexao-de-sorte-ssl-keystore-password:}
    key-store-type: PKCS12
  netty:
    connection-timeout: 20s
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
    include-exception: false

spring:
  application:
    name: batepapo
  profiles:
    default: prod
  main:
    allow-bean-definition-overriding: true
    
  # Azure Key Vault with manual configuration
  cloud:
    azure:
      keyvault:
        secret:
          enabled: ${AZURE_KEYVAULT_ENABLED:true}
          endpoint: ${AZURE_KEYVAULT_ENDPOINT:}
      profile:
        tenant-id: ${AZURE_TENANT_ID:}
        subscription-id: ${AZURE_SUBSCRIPTION_ID:}
        client-id: ${AZURE_CLIENT_ID:}
        
  config:
    import:
      - optional:configtree:/etc/secrets/azure/
      - optional:configtree:/mnt/secrets/
      - optional:file:./secrets.properties
  r2dbc:
    url: ${conexao-de-sorte-database-r2dbc-url:r2dbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:conexao_sorte_batepapo}}
    username: ${conexao-de-sorte-database-username:${DB_USERNAME}}
    password: ${conexao-de-sorte-database-password:${DB_PASSWORD}}
    pool:
      initial-size: 5
      max-size: 30
      max-idle-time: 30m
      max-acquire-time: 60s
      max-create-connection-time: 30s
      max-life-time: 60m
      validation-query: SELECT 1
  flyway:
    enabled: true
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:conexao_sorte_batepapo}
    user: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: false
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      database: ${REDIS_DB_CHAT:2}
      timeout: 3000ms
      connect-timeout: 10000ms
      lettuce:
        pool:
          enabled: true
          max-active: 30
          max-idle: 10
          min-idle: 5
          max-wait: 3000ms
          time-between-eviction-runs: 60000ms
        cluster:
          refresh:
            adaptive: true
            period: 30s
      client-type: lettuce
  cache:
    type: redis
    redis:
      time-to-live: 300000ms
      cache-null-values: false
      use-key-prefix: true
    cache-names:
      - chat:mensagens
      - chat:salas
      - chat:usuarios-online
      - chat:mensagens-recentes
      - chat:salas-ativas
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${JWT_JWKS_URI:http://localhost:8081/.well-known/jwks.json}
          issuer-uri: ${JWT_ISSUER:https://auth.conexaodesorte.com}
          audience: ${JWT_AUDIENCE:conexao-de-sorte}
  jackson:
    time-zone: America/Sao_Paulo
    locale: pt_BR

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
      cors:
        allowed-origins: "*"
        allowed-methods: GET
  endpoint:
    health:
      show-details: when-authorized
      show-components: when-authorized
      probes:
        enabled: true
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        step: 60s
    web:
      server:
        request:
          autotime:
            enabled: true
            percentiles: 0.5,0.95,0.99
  tracing:
    enabled: true
    sampling:
      probability: ${TRACING_PROBABILITY:0.1}
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_ENDPOINT:http://localhost:9411/api/v2/spans}

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    operationsSorter: method
    tagsSorter: alpha
  show-actuator: false

---
spring:
  config:
    activate:
      on-profile: dev
  r2dbc:
    url: r2dbc:mysql://localhost:3306/conexao_sorte_batepapo_dev
  flyway:
    url: jdbc:mysql://localhost:3306/conexao_sorte_batepapo_dev

logging:
  level:
    br.tec.facilitaservicos.batepapo: DEBUG
    org.springframework.security: DEBUG
    org.springframework.r2dbc: DEBUG
    org.springframework.web.socket: DEBUG



---
spring:
  config:
    activate:
      on-profile: prod
  r2dbc:
    pool:
      initial-size: 10
      max-size: 50
  flyway:
    clean-disabled: true

server:
  port: 8079

management:
  endpoint:
    health:
      show-details: never

logging:
  level:
    br.tec.facilitaservicos.batepapo: INFO
    root: WARN
  file:
    name: /var/log/batepapo/application.log
